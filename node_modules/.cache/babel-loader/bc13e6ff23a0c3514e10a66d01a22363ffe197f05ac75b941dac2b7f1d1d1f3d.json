{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: \"HeaderComponent\",\n  props: {\n    apiBaseUrl: {\n      type: String,\n      required: true\n    },\n    translations: {\n      type: Object,\n      required: true\n    },\n    disableFocus: {\n      type: Boolean,\n      default: false\n    },\n    token: {\n      type: String,\n      required: true\n    },\n    user: {\n      type: Object,\n      default: () => null // Default to null if no user is provided\n    }\n  },\n  data() {\n    return {\n      barcodeInput: \"\",\n      showPopup: false,\n      debouncedOnBarcodeInput: null,\n      focusInterval: null\n    };\n  },\n  watch: {\n    disableFocus(newValue) {\n      if (newValue) {\n        clearInterval(this.focusInterval); // Stop focusing\n      } else {\n        this.focusInterval = setInterval(this.maintainFocus, 100); // Resume focusing\n      }\n    }\n  },\n  methods: {\n    debounce(func, wait) {\n      let timeout;\n      return function (...args) {\n        clearTimeout(timeout);\n        timeout = setTimeout(() => func.apply(this, args), wait);\n      };\n    },\n    async fetchProduct(term, type = \"BARCODE\") {\n      try {\n        const response = await axios.post(`${this.apiBaseUrl}/products/find`, {\n          type,\n          term\n        }, {\n          headers: {\n            Authorization: `Bearer ${this.token}`\n          }\n        });\n        const jsend = response.data;\n        if (jsend.status === \"success\" && jsend.data.length > 0) {\n          return jsend.data; // Return the list of products\n        } else {\n          return null; // No products found\n        }\n      } catch (error) {\n        console.error(\"Error fetching product:\", error);\n        this.showPopup = true; // Show popup for fetch error\n        return null; // Return null if an error occurs\n      }\n    },\n    async onBarcodeInput() {\n      const term = this.barcodeInput.trim();\n      if (!term) return;\n      this.showPopup = false; // Hide any existing popups\n\n      // Determine the type of input\n      let type;\n      if (/^\\d+$/.test(term)) {\n        type = term.length === 12 || term.length === 13 ? \"BARCODE\" : \"ALL\";\n      } else if (term.match(/^[a-zA-Z0-9-]+$/)) {\n        type = \"REFERENCE\";\n      } else {\n        type = \"NAME\";\n      }\n\n      // Fetch product based on detected type\n      const products = await this.fetchProduct(term, type);\n      if (products && products.length > 0) {\n        const product = products[0]; // Handle multiple products (select first for now)\n        this.$emit(\"product-scanned\", product);\n        this.barcodeInput = \"\"; // Clear input\n      } else {\n        this.showPopup = true; // Show popup if no product found\n      }\n    },\n    closePopup() {\n      this.showPopup = false;\n      this.barcodeInput = \"\";\n    },\n    maintainFocus() {\n      if (!this.disableFocus) {\n        this.$refs.searchInput.focus();\n      }\n    },\n    handleLogout() {\n      this.$emit(\"logout\"); // Emit the logout event to App.vue\n    }\n  },\n  mounted() {\n    this.focusInterval = setInterval(this.maintainFocus, 100);\n    this.debouncedOnBarcodeInput = this.debounce(this.onBarcodeInput, 50);\n  },\n  beforeUnmount() {\n    clearInterval(this.focusInterval);\n  }\n};","map":{"version":3,"names":["axios","name","props","apiBaseUrl","type","String","required","translations","Object","disableFocus","Boolean","default","token","user","data","barcodeInput","showPopup","debouncedOnBarcodeInput","focusInterval","watch","newValue","clearInterval","setInterval","maintainFocus","methods","debounce","func","wait","timeout","args","clearTimeout","setTimeout","apply","fetchProduct","term","response","post","headers","Authorization","jsend","status","length","error","console","onBarcodeInput","trim","test","match","products","product","$emit","closePopup","$refs","searchInput","focus","handleLogout","mounted","beforeUnmount"],"sources":["C:\\wamp64\\www\\tbpos\\src\\front\\src\\components\\HeaderComponent.vue"],"sourcesContent":["<template>\r\n  <header>\r\n    <div class=\"header-content\">\r\n      <span class=\"header-title\">Point of Sale</span>\r\n      <div class=\"search-bar\">\r\n        <i class=\"fas fa-magnifying-glass search-icon\"></i>\r\n        <input\r\n          ref=\"searchInput\"\r\n          type=\"text\"\r\n          v-model=\"barcodeInput\"\r\n          @input=\"debouncedOnBarcodeInput\"\r\n          id=\"barcodeInput\"\r\n          placeholder=\"Zoek Product op Naam, Barcode, Product id\"\r\n        />\r\n        <i class=\"fas fa-barcode barcode-icon\"></i>\r\n      </div>\r\n\r\n      <div class=\"user-info\">\r\n        <i class=\"fas fa-user user-image\"></i>\r\n        <span>{{\r\n          user ? `${user.firstName} ${user.lastName}` : \"John Doe\"\r\n        }}</span>\r\n      </div>\r\n\r\n      <div class=\"user-signoff\">\r\n        <i class=\"fas fa-right-from-bracket user-signofficon\"></i>\r\n        <span @click=\"handleLogout\">Afmelden</span>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Popup for unknown barcode -->\r\n    <div v-if=\"showPopup\" class=\"popup-overlay\">\r\n      <div class=\"popup-message\">\r\n        <p>{{ this.translations.barcodeNotFound }}</p>\r\n        <button @click=\"closePopup\">Sluiten</button>\r\n      </div>\r\n    </div>\r\n  </header>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"HeaderComponent\",\r\n  props: {\r\n    apiBaseUrl: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    translations: {\r\n      type: Object,\r\n      required: true,\r\n    },\r\n    disableFocus: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    token: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    user: {\r\n      type: Object,\r\n      default: () => null, // Default to null if no user is provided\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      barcodeInput: \"\",\r\n      showPopup: false,\r\n      debouncedOnBarcodeInput: null,\r\n      focusInterval: null,\r\n    };\r\n  },\r\n  watch: {\r\n    disableFocus(newValue) {\r\n      if (newValue) {\r\n        clearInterval(this.focusInterval); // Stop focusing\r\n      } else {\r\n        this.focusInterval = setInterval(this.maintainFocus, 100); // Resume focusing\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    debounce(func, wait) {\r\n      let timeout;\r\n      return function (...args) {\r\n        clearTimeout(timeout);\r\n        timeout = setTimeout(() => func.apply(this, args), wait);\r\n      };\r\n    },\r\n    async fetchProduct(term, type = \"BARCODE\") {\r\n      try {\r\n        const response = await axios.post(\r\n          `${this.apiBaseUrl}/products/find`,\r\n          {\r\n            type,\r\n            term,\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${this.token}`,\r\n            },\r\n          }\r\n        );\r\n\r\n        const jsend = response.data;\r\n\r\n        if (jsend.status === \"success\" && jsend.data.length > 0) {\r\n          return jsend.data; // Return the list of products\r\n        } else {\r\n          return null; // No products found\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching product:\", error);\r\n        this.showPopup = true; // Show popup for fetch error\r\n        return null; // Return null if an error occurs\r\n      }\r\n    },\r\n    async onBarcodeInput() {\r\n      const term = this.barcodeInput.trim();\r\n      if (!term) return;\r\n\r\n      this.showPopup = false; // Hide any existing popups\r\n\r\n      // Determine the type of input\r\n      let type;\r\n      if (/^\\d+$/.test(term)) {\r\n        type = term.length === 12 || term.length === 13 ? \"BARCODE\" : \"ALL\";\r\n      } else if (term.match(/^[a-zA-Z0-9-]+$/)) {\r\n        type = \"REFERENCE\";\r\n      } else {\r\n        type = \"NAME\";\r\n      }\r\n\r\n      // Fetch product based on detected type\r\n      const products = await this.fetchProduct(term, type);\r\n\r\n      if (products && products.length > 0) {\r\n        const product = products[0]; // Handle multiple products (select first for now)\r\n        this.$emit(\"product-scanned\", product);\r\n        this.barcodeInput = \"\"; // Clear input\r\n      } else {\r\n        this.showPopup = true; // Show popup if no product found\r\n      }\r\n    },\r\n    closePopup() {\r\n      this.showPopup = false;\r\n      this.barcodeInput = \"\";\r\n    },\r\n    maintainFocus() {\r\n      if (!this.disableFocus) {\r\n        this.$refs.searchInput.focus();\r\n      }\r\n    },\r\n    handleLogout() {\r\n      this.$emit(\"logout\"); // Emit the logout event to App.vue\r\n    },\r\n  },\r\n  mounted() {\r\n    this.focusInterval = setInterval(this.maintainFocus, 100);\r\n    this.debouncedOnBarcodeInput = this.debounce(this.onBarcodeInput, 50);\r\n  },\r\n  beforeUnmount() {\r\n    clearInterval(this.focusInterval);\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}