{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withModifiers as _withModifiers, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"login-container\"\n};\nconst _hoisted_2 = {\n  class: \"form-group\"\n};\nconst _hoisted_3 = {\n  class: \"form-group\"\n};\nconst _hoisted_4 = {\n  class: \"form-group\"\n};\nconst _hoisted_5 = [\"value\"];\nconst _hoisted_6 = {\n  key: 0,\n  class: \"error-message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[8] || (_cache[8] = _createElementVNode(\"h2\", {\n    class: \"login-title\"\n  }, \"Login\", -1)), _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.handleLogin && $options.handleLogin(...args), [\"prevent\"])),\n    class: \"login-form\"\n  }, [_createElementVNode(\"div\", _hoisted_2, [_cache[4] || (_cache[4] = _createElementVNode(\"label\", {\n    for: \"username\",\n    class: \"form-label\"\n  }, \"Gebruikersnaam\", -1)), _withDirectives(_createElementVNode(\"input\", {\n    id: \"username\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.username = $event),\n    type: \"text\",\n    placeholder: \"Gebruikersnaam\",\n    class: \"form-input\",\n    required: \"\"\n  }, null, 512), [[_vModelText, $data.username]])]), _createElementVNode(\"div\", _hoisted_3, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", {\n    for: \"password\",\n    class: \"form-label\"\n  }, \"Wachtwoord\", -1)), _withDirectives(_createElementVNode(\"input\", {\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    type: \"password\",\n    placeholder: \"Wachtwoord\",\n    class: \"form-input\",\n    required: \"\"\n  }, null, 512), [[_vModelText, $data.password]])]), _createElementVNode(\"div\", _hoisted_4, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", {\n    for: \"workstation\",\n    class: \"form-label\"\n  }, \"Kassa\", -1)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.workstationId = $event),\n    id: \"workstation\",\n    class: \"form-select\",\n    required: \"\"\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.workstations, ws => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: ws.id,\n      value: ws.id\n    }, _toDisplayString(ws.name), 9, _hoisted_5);\n  }), 128))], 512), [[_vModelSelect, $data.workstationId]])]), _cache[7] || (_cache[7] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"login-button\"\n  }, \"Inloggen\", -1))], 32), $data.errorMessage ? (_openBlock(), _createElementBlock(\"p\", _hoisted_6, _toDisplayString($data.errorMessage), 1)) : _createCommentVNode(\"\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","handleLogin","_hoisted_2","for","id","$event","$data","username","type","placeholder","required","_hoisted_3","password","_hoisted_4","workstationId","_Fragment","_renderList","workstations","ws","value","name","_hoisted_5","errorMessage","_hoisted_6","_toDisplayString","_createCommentVNode"],"sources":["C:\\wamp64\\www\\tbpos\\src\\front\\src\\components\\LoginComponent.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <h2 class=\"login-title\">Login</h2>\r\n    <form @submit.prevent=\"handleLogin\" class=\"login-form\">\r\n      <div class=\"form-group\">\r\n        <label for=\"username\" class=\"form-label\">Gebruikersnaam</label>\r\n        <input\r\n          id=\"username\"\r\n          v-model=\"username\"\r\n          type=\"text\"\r\n          placeholder=\"Gebruikersnaam\"\r\n          class=\"form-input\"\r\n          required\r\n        />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"password\" class=\"form-label\">Wachtwoord</label>\r\n        <input\r\n          id=\"password\"\r\n          v-model=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Wachtwoord\"\r\n          class=\"form-input\"\r\n          required\r\n        />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"workstation\" class=\"form-label\">Kassa</label>\r\n        <select\r\n          v-model=\"workstationId\"\r\n          id=\"workstation\"\r\n          class=\"form-select\"\r\n          required\r\n        >\r\n          <option v-for=\"ws in workstations\" :key=\"ws.id\" :value=\"ws.id\">\r\n            {{ ws.name }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n      <button type=\"submit\" class=\"login-button\">Inloggen</button>\r\n    </form>\r\n    <p v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: \"\",\r\n      password: \"\",\r\n      role: \"cashier\",\r\n      workstationId: null,\r\n      workstations: [],\r\n      errorMessage: \"\",\r\n    };\r\n  },\r\n  async created() {\r\n    try {\r\n      // Fetch workstations from the API\r\n      const response = await axios.get(\r\n        `${this.$props.apiBaseUrl}/workstations`\r\n      );\r\n      this.workstations = response.data.data;\r\n\r\n      // Check localStorage for a saved workstation ID\r\n      const savedWorkstationId = localStorage.getItem(\"lastWorkstationId\");\r\n      if (\r\n        savedWorkstationId &&\r\n        this.workstations.some((ws) => ws.id === savedWorkstationId)\r\n      ) {\r\n        this.workstationId = savedWorkstationId; // Preselect saved workstation\r\n      }\r\n    } catch (error) {\r\n      this.errorMessage = \"Failed to load workstations.\";\r\n    }\r\n  },\r\n  methods: {\r\n    async handleLogin() {\r\n      try {\r\n        if (!this.workstationId) {\r\n          this.errorMessage = \"Please select a workstation.\";\r\n          return;\r\n        }\r\n\r\n        const response = await axios.post(`${this.$props.apiBaseUrl}/users`, {\r\n          username: this.username,\r\n          password: this.password,\r\n          role: this.role,\r\n          workstationId: this.workstationId,\r\n        });\r\n\r\n        const { token, expiresIn } = response.data.data; // Ensure 'expiresIn' is included in the response\r\n        console.log(\"Token received from login:\", token); // Debugging\r\n\r\n        // Save the selected workstation in localStorage\r\n        localStorage.setItem(\"lastWorkstationId\", this.workstationId);\r\n\r\n        // Calculate and store token expiration time\r\n        const tokenExpirationTime = Date.now() + expiresIn * 1000; // Convert seconds to milliseconds\r\n        localStorage.setItem(\"tokenExpirationTime\", tokenExpirationTime);\r\n\r\n        // Emit token to parent component (app.vue)\r\n        this.$emit(\"login-success\", token.value);\r\n      } catch (error) {\r\n        this.errorMessage = this.translations.loginFailed;\r\n        console.error(\"Login error:\", error);\r\n      }\r\n    },\r\n  },\r\n  props: {\r\n    apiBaseUrl: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    translations: {\r\n      type: Object,\r\n      required: true,\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAiB;;EAGnBA,KAAK,EAAC;AAAY;;EAWlBA,KAAK,EAAC;AAAY;;EAWlBA,KAAK,EAAC;AAAY;mBA1B7B;;EAAAC,GAAA;EAyC2BD,KAAK,EAAC;;;uBAxC/BE,mBAAA,CAyCM,OAzCNC,UAyCM,G,0BAxCJC,mBAAA,CAAkC;IAA9BJ,KAAK,EAAC;EAAa,GAAC,OAAK,QAC7BI,mBAAA,CAqCO;IArCAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHjBC,cAAA,KAAAC,IAAA,KAG2BC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;IAAER,KAAK,EAAC;MACxCI,mBAAA,CAUM,OAVNO,UAUM,G,0BATJP,mBAAA,CAA+D;IAAxDQ,GAAG,EAAC,UAAU;IAACZ,KAAK,EAAC;KAAa,gBAAc,Q,gBACvDI,mBAAA,CAOE;IANAS,EAAE,EAAC,UAAU;IAPvB,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAQmBC,KAAA,CAAAC,QAAQ,GAAAF,MAAA;IACjBG,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC,gBAAgB;IAC5BlB,KAAK,EAAC,YAAY;IAClBmB,QAAQ,EAAR;gCAJSJ,KAAA,CAAAC,QAAQ,E,KAOrBZ,mBAAA,CAUM,OAVNgB,UAUM,G,0BATJhB,mBAAA,CAA2D;IAApDQ,GAAG,EAAC,UAAU;IAACZ,KAAK,EAAC;KAAa,YAAU,Q,gBACnDI,mBAAA,CAOE;IANAS,EAAE,EAAC,UAAU;IAlBvB,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAmBmBC,KAAA,CAAAM,QAAQ,GAAAP,MAAA;IACjBG,IAAI,EAAC,UAAU;IACfC,WAAW,EAAC,YAAY;IACxBlB,KAAK,EAAC,YAAY;IAClBmB,QAAQ,EAAR;gCAJSJ,KAAA,CAAAM,QAAQ,E,KAOrBjB,mBAAA,CAYM,OAZNkB,UAYM,G,0BAXJlB,mBAAA,CAAyD;IAAlDQ,GAAG,EAAC,aAAa;IAACZ,KAAK,EAAC;KAAa,OAAK,Q,gBACjDI,mBAAA,CASS;IArCjB,uBAAAE,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IA6BmBC,KAAA,CAAAQ,aAAa,GAAAT,MAAA;IACtBD,EAAE,EAAC,aAAa;IAChBb,KAAK,EAAC,aAAa;IACnBmB,QAAQ,EAAR;yBAEAjB,mBAAA,CAESsB,SAAA,QApCnBC,WAAA,CAkC+BV,KAAA,CAAAW,YAAY,EAAlBC,EAAE;yBAAjBzB,mBAAA,CAES;MAF2BD,GAAG,EAAE0B,EAAE,CAACd,EAAE;MAAGe,KAAK,EAAED,EAAE,CAACd;wBACtDc,EAAE,CAACE,IAAI,MAnCtBC,UAAA;qCA6BmBf,KAAA,CAAAQ,aAAa,E,+BAU1BnB,mBAAA,CAA4D;IAApDa,IAAI,EAAC,QAAQ;IAACjB,KAAK,EAAC;KAAe,UAAQ,O,OAE5Ce,KAAA,CAAAgB,YAAY,I,cAArB7B,mBAAA,CAAmE,KAAnE8B,UAAmE,EAAAC,gBAAA,CAAnBlB,KAAA,CAAAgB,YAAY,SAzChEG,mBAAA,W","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}