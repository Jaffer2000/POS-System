{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      username: \"\",\n      password: \"\",\n      role: \"cashier\",\n      workstationId: null,\n      workstations: [],\n      errorMessage: \"\"\n    };\n  },\n  async created() {\n    try {\n      // Fetch workstations from the API\n      const response = await axios.get(`${this.$props.apiBaseUrl}/workstations`);\n      this.workstations = response.data.data;\n\n      // Check localStorage for a saved workstation ID\n      const savedWorkstationId = localStorage.getItem(\"lastWorkstationId\");\n      if (savedWorkstationId && this.workstations.some(ws => ws.id === savedWorkstationId)) {\n        this.workstationId = savedWorkstationId; // Preselect saved workstation\n      }\n    } catch (error) {\n      this.errorMessage = \"Failed to load workstations.\";\n    }\n  },\n  methods: {\n    async handleLogin() {\n      try {\n        if (!this.workstationId) {\n          this.errorMessage = \"Please select a workstation.\";\n          return;\n        }\n        const response = await axios.post(`${this.$props.apiBaseUrl}/users`, {\n          username: this.username,\n          password: this.password,\n          role: this.role,\n          workstationId: this.workstationId\n        });\n        const {\n          token,\n          expiresIn\n        } = response.data.data; // Ensure 'expiresIn' is included in the response\n        console.log(\"Token received from login:\", token); // Debugging\n\n        // Save the selected workstation in localStorage\n        localStorage.setItem(\"lastWorkstationId\", this.workstationId);\n\n        // Calculate and store token expiration time\n        const tokenExpirationTime = Date.now() + expiresIn * 1000; // Convert seconds to milliseconds\n        localStorage.setItem(\"tokenExpirationTime\", tokenExpirationTime);\n\n        // Emit token to parent component (app.vue)\n        this.$emit(\"login-success\", token.value);\n      } catch (error) {\n        this.errorMessage = this.translations.loginFailed;\n        console.error(\"Login error:\", error);\n      }\n    }\n  },\n  props: {\n    apiBaseUrl: {\n      type: String,\n      required: true\n    },\n    translations: {\n      type: Object,\n      required: true\n    }\n  }\n};","map":{"version":3,"names":["axios","data","username","password","role","workstationId","workstations","errorMessage","created","response","get","$props","apiBaseUrl","savedWorkstationId","localStorage","getItem","some","ws","id","error","methods","handleLogin","post","token","expiresIn","console","log","setItem","tokenExpirationTime","Date","now","$emit","value","translations","loginFailed","props","type","String","required","Object"],"sources":["C:\\wamp64\\www\\tbpos\\src\\front\\src\\components\\LoginComponent.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <h2 class=\"login-title\">Login</h2>\r\n    <form @submit.prevent=\"handleLogin\" class=\"login-form\">\r\n      <div class=\"form-group\">\r\n        <label for=\"username\" class=\"form-label\">Gebruikersnaam</label>\r\n        <input\r\n          id=\"username\"\r\n          v-model=\"username\"\r\n          type=\"text\"\r\n          placeholder=\"Gebruikersnaam\"\r\n          class=\"form-input\"\r\n          required\r\n        />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"password\" class=\"form-label\">Wachtwoord</label>\r\n        <input\r\n          id=\"password\"\r\n          v-model=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Wachtwoord\"\r\n          class=\"form-input\"\r\n          required\r\n        />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"workstation\" class=\"form-label\">Kassa</label>\r\n        <select\r\n          v-model=\"workstationId\"\r\n          id=\"workstation\"\r\n          class=\"form-select\"\r\n          required\r\n        >\r\n          <option v-for=\"ws in workstations\" :key=\"ws.id\" :value=\"ws.id\">\r\n            {{ ws.name }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n      <button type=\"submit\" class=\"login-button\">Inloggen</button>\r\n    </form>\r\n    <p v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: \"\",\r\n      password: \"\",\r\n      role: \"cashier\",\r\n      workstationId: null,\r\n      workstations: [],\r\n      errorMessage: \"\",\r\n    };\r\n  },\r\n  async created() {\r\n    try {\r\n      // Fetch workstations from the API\r\n      const response = await axios.get(\r\n        `${this.$props.apiBaseUrl}/workstations`\r\n      );\r\n      this.workstations = response.data.data;\r\n\r\n      // Check localStorage for a saved workstation ID\r\n      const savedWorkstationId = localStorage.getItem(\"lastWorkstationId\");\r\n      if (\r\n        savedWorkstationId &&\r\n        this.workstations.some((ws) => ws.id === savedWorkstationId)\r\n      ) {\r\n        this.workstationId = savedWorkstationId; // Preselect saved workstation\r\n      }\r\n    } catch (error) {\r\n      this.errorMessage = \"Failed to load workstations.\";\r\n    }\r\n  },\r\n  methods: {\r\n    async handleLogin() {\r\n      try {\r\n        if (!this.workstationId) {\r\n          this.errorMessage = \"Please select a workstation.\";\r\n          return;\r\n        }\r\n\r\n        const response = await axios.post(`${this.$props.apiBaseUrl}/users`, {\r\n          username: this.username,\r\n          password: this.password,\r\n          role: this.role,\r\n          workstationId: this.workstationId,\r\n        });\r\n\r\n        const { token, expiresIn } = response.data.data; // Ensure 'expiresIn' is included in the response\r\n        console.log(\"Token received from login:\", token); // Debugging\r\n\r\n        // Save the selected workstation in localStorage\r\n        localStorage.setItem(\"lastWorkstationId\", this.workstationId);\r\n\r\n        // Calculate and store token expiration time\r\n        const tokenExpirationTime = Date.now() + expiresIn * 1000; // Convert seconds to milliseconds\r\n        localStorage.setItem(\"tokenExpirationTime\", tokenExpirationTime);\r\n\r\n        // Emit token to parent component (app.vue)\r\n        this.$emit(\"login-success\", token.value);\r\n      } catch (error) {\r\n        this.errorMessage = this.translations.loginFailed;\r\n        console.error(\"Login error:\", error);\r\n      }\r\n    },\r\n  },\r\n  props: {\r\n    apiBaseUrl: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    translations: {\r\n      type: Object,\r\n      required: true,\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"AA8CA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE,SAAS;MACfC,aAAa,EAAE,IAAI;MACnBC,YAAY,EAAE,EAAE;MAChBC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI;MACF;MACA,MAAMC,QAAO,GAAI,MAAMT,KAAK,CAACU,GAAG,CAC9B,GAAG,IAAI,CAACC,MAAM,CAACC,UAAU,eAC3B,CAAC;MACD,IAAI,CAACN,YAAW,GAAIG,QAAQ,CAACR,IAAI,CAACA,IAAI;;MAEtC;MACA,MAAMY,kBAAiB,GAAIC,YAAY,CAACC,OAAO,CAAC,mBAAmB,CAAC;MACpE,IACEF,kBAAiB,IACjB,IAAI,CAACP,YAAY,CAACU,IAAI,CAAEC,EAAE,IAAKA,EAAE,CAACC,EAAC,KAAML,kBAAkB,GAC3D;QACA,IAAI,CAACR,aAAY,GAAIQ,kBAAkB,EAAE;MAC3C;IACF,EAAE,OAAOM,KAAK,EAAE;MACd,IAAI,CAACZ,YAAW,GAAI,8BAA8B;IACpD;EACF,CAAC;EACDa,OAAO,EAAE;IACP,MAAMC,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,IAAI,CAAC,IAAI,CAAChB,aAAa,EAAE;UACvB,IAAI,CAACE,YAAW,GAAI,8BAA8B;UAClD;QACF;QAEA,MAAME,QAAO,GAAI,MAAMT,KAAK,CAACsB,IAAI,CAAC,GAAG,IAAI,CAACX,MAAM,CAACC,UAAU,QAAQ,EAAE;UACnEV,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,IAAI,EAAE,IAAI,CAACA,IAAI;UACfC,aAAa,EAAE,IAAI,CAACA;QACtB,CAAC,CAAC;QAEF,MAAM;UAAEkB,KAAK;UAAEC;QAAU,IAAIf,QAAQ,CAACR,IAAI,CAACA,IAAI,EAAE;QACjDwB,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEH,KAAK,CAAC,EAAE;;QAElD;QACAT,YAAY,CAACa,OAAO,CAAC,mBAAmB,EAAE,IAAI,CAACtB,aAAa,CAAC;;QAE7D;QACA,MAAMuB,mBAAkB,GAAIC,IAAI,CAACC,GAAG,CAAC,IAAIN,SAAQ,GAAI,IAAI,EAAE;QAC3DV,YAAY,CAACa,OAAO,CAAC,qBAAqB,EAAEC,mBAAmB,CAAC;;QAEhE;QACA,IAAI,CAACG,KAAK,CAAC,eAAe,EAAER,KAAK,CAACS,KAAK,CAAC;MAC1C,EAAE,OAAOb,KAAK,EAAE;QACd,IAAI,CAACZ,YAAW,GAAI,IAAI,CAAC0B,YAAY,CAACC,WAAW;QACjDT,OAAO,CAACN,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACtC;IACF;EACF,CAAC;EACDgB,KAAK,EAAE;IACLvB,UAAU,EAAE;MACVwB,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDL,YAAY,EAAE;MACZG,IAAI,EAAEG,MAAM;MACZD,QAAQ,EAAE;IACZ;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}