{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: \"OrderDetails\",\n  props: {\n    id: {\n      type: String,\n      required: true\n    },\n    apiBaseUrl: {\n      type: String,\n      required: true\n    },\n    token: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      order: null,\n      showPopup: false // Controls the visibility of the popup\n    };\n  },\n  mounted() {\n    this.fetchOrderDetails();\n  },\n  methods: {\n    async fetchOrderDetails() {\n      try {\n        const response = await axios.get(`${this.apiBaseUrl}/orders/${this.id}`, {\n          headers: {\n            Authorization: `Bearer ${this.token}`\n          }\n        });\n        this.order = response.data.data || null;\n      } catch (error) {\n        console.error(\"Fout bij het ophalen van orderdetails:\", error);\n        this.order = null;\n      }\n    },\n    handlePrint() {\n      this.showPopup = true;\n    },\n    closePopup() {\n      this.showPopup = false;\n    },\n    async printDocument(printType) {\n      if (!this.order || !this.order.id) {\n        console.error(\"Fout: Geen order ID beschikbaar.\");\n        return;\n      }\n      try {\n        const response = await axios.post(`${this.apiBaseUrl}/orders/print-document`, {\n          order_id: this.order.id,\n          print_type: printType\n        }, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${this.token}`\n          }\n        });\n        console.log(\"Printen succesvol:\", response.data);\n        alert(\"Document succesvol geprint!\");\n        this.closePopup(); // Close the popup after printing\n      } catch (error) {\n        console.error(\"Fout bij het printen:\", error.response?.data || error);\n        alert(\"Er is een fout opgetreden bij het printen van het document.\");\n        this.closePopup(); // Close the popup on error\n      }\n    },\n    goToOrderOverview() {\n      this.$router.push({\n        name: \"Bestellingen\"\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","id","type","String","required","apiBaseUrl","token","data","order","showPopup","mounted","fetchOrderDetails","methods","response","get","headers","Authorization","error","console","handlePrint","closePopup","printDocument","printType","post","order_id","print_type","log","alert","goToOrderOverview","$router","push"],"sources":["C:\\wamp64\\www\\tbpos\\src\\front\\src\\components\\OrderDetails.vue"],"sourcesContent":["<template>\r\n  <div class=\"order-details-container\">\r\n    <div v-if=\"order\" class=\"order-details-content\">\r\n      <div class=\"d-flex justify-content-between align-items-center\">\r\n        <h2>Bestelgegevens - ID: {{ order.id }}</h2>\r\n        <button class=\"print-order-btn btn\" @click=\"handlePrint\">\r\n          <i class=\"fas fa-print me-2\"></i> Print Bestelling\r\n        </button>\r\n      </div>\r\n      <table class=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Referentie</th>\r\n            <th>Klant</th>\r\n            <th>Datum</th>\r\n            <th>Totaal</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>{{ order.reference }}</td>\r\n            <td>{{ order.customer || \"Geen klantinformatie\" }}</td>\r\n            <td>{{ order.date }}</td>\r\n            <td>€{{ order.total_tax_incl.toFixed(2) }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n      <h3>Gekochte artikelen</h3>\r\n      <div v-if=\"order.lines && order.lines.length > 0\">\r\n        <table class=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Afbeelding</th>\r\n              <th>Naam</th>\r\n              <th>Referentie</th>\r\n              <th>Aantal</th>\r\n              <th>Prijs</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"item in order.lines\" :key=\"item.product_id\">\r\n              <td>\r\n                <img\r\n                  :src=\"item.image_url\"\r\n                  alt=\"Product afbeelding\"\r\n                  style=\"max-width: 50px\"\r\n                />\r\n              </td>\r\n              <td>{{ item.name }}</td>\r\n              <td>{{ item.reference }}</td>\r\n              <td>{{ item.quantity }}</td>\r\n              <td>€{{ item.price_tax_incl.toFixed(2) }}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div v-else>\r\n        <p>Geen artikelen gevonden in deze bestelling.</p>\r\n      </div>\r\n      <button @click=\"goToOrderOverview\" class=\"back-to-orders-btn btn mt-3\">\r\n        <i class=\"fas fa-arrow-left me-1\"></i> Terug naar Bestellingen\r\n      </button>\r\n    </div>\r\n    <div v-else>\r\n      <p>Bezig met het laden van Bestelgegevens...</p>\r\n    </div>\r\n\r\n    <!-- Popup for Print Type -->\r\n    <div v-if=\"showPopup\" class=\"popup-overlay\" @click=\"closePopup\">\r\n      <div class=\"popup-message\" @click.stop>\r\n        <h3>Kies het type document:</h3>\r\n        <button @click=\"printDocument('INVOICE')\">Factuur</button>\r\n        <button @click=\"printDocument('RECEIPT')\">Bon</button>\r\n        <button @click=\"closePopup\">Annuleren</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"OrderDetails\",\r\n  props: {\r\n    id: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    apiBaseUrl: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    token: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      order: null,\r\n      showPopup: false, // Controls the visibility of the popup\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchOrderDetails();\r\n  },\r\n  methods: {\r\n    async fetchOrderDetails() {\r\n      try {\r\n        const response = await axios.get(\r\n          `${this.apiBaseUrl}/orders/${this.id}`,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${this.token}`,\r\n            },\r\n          }\r\n        );\r\n        this.order = response.data.data || null;\r\n      } catch (error) {\r\n        console.error(\"Fout bij het ophalen van orderdetails:\", error);\r\n        this.order = null;\r\n      }\r\n    },\r\n    handlePrint() {\r\n      this.showPopup = true;\r\n    },\r\n    closePopup() {\r\n      this.showPopup = false;\r\n    },\r\n    async printDocument(printType) {\r\n      if (!this.order || !this.order.id) {\r\n        console.error(\"Fout: Geen order ID beschikbaar.\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.post(\r\n          `${this.apiBaseUrl}/orders/print-document`,\r\n          {\r\n            order_id: this.order.id,\r\n            print_type: printType,\r\n          },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: `Bearer ${this.token}`,\r\n            },\r\n          }\r\n        );\r\n        console.log(\"Printen succesvol:\", response.data);\r\n        alert(\"Document succesvol geprint!\");\r\n        this.closePopup(); // Close the popup after printing\r\n      } catch (error) {\r\n        console.error(\"Fout bij het printen:\", error.response?.data || error);\r\n        alert(\"Er is een fout opgetreden bij het printen van het document.\");\r\n        this.closePopup(); // Close the popup on error\r\n      }\r\n    },\r\n    goToOrderOverview() {\r\n      this.$router.push({ name: \"Bestellingen\" });\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"AAiFA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,KAAK,EAAE;IACLC,EAAE,EAAE;MACFC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDC,UAAU,EAAE;MACVH,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDE,KAAK,EAAE;MACLJ,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,IAAI;MACXC,SAAS,EAAE,KAAK,CAAE;IACpB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,iBAAiB,CAAC,CAAC;EAC1B,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,iBAAiBA,CAAA,EAAG;MACxB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMf,KAAK,CAACgB,GAAG,CAC9B,GAAG,IAAI,CAACT,UAAU,WAAW,IAAI,CAACJ,EAAE,EAAE,EACtC;UACEc,OAAO,EAAE;YACPC,aAAa,EAAE,UAAU,IAAI,CAACV,KAAK;UACrC;QACF,CACF,CAAC;QACD,IAAI,CAACE,KAAI,GAAIK,QAAQ,CAACN,IAAI,CAACA,IAAG,IAAK,IAAI;MACzC,EAAE,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;QAC9D,IAAI,CAACT,KAAI,GAAI,IAAI;MACnB;IACF,CAAC;IACDW,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACV,SAAQ,GAAI,IAAI;IACvB,CAAC;IACDW,UAAUA,CAAA,EAAG;MACX,IAAI,CAACX,SAAQ,GAAI,KAAK;IACxB,CAAC;IACD,MAAMY,aAAaA,CAACC,SAAS,EAAE;MAC7B,IAAI,CAAC,IAAI,CAACd,KAAI,IAAK,CAAC,IAAI,CAACA,KAAK,CAACP,EAAE,EAAE;QACjCiB,OAAO,CAACD,KAAK,CAAC,kCAAkC,CAAC;QACjD;MACF;MAEA,IAAI;QACF,MAAMJ,QAAO,GAAI,MAAMf,KAAK,CAACyB,IAAI,CAC/B,GAAG,IAAI,CAAClB,UAAU,wBAAwB,EAC1C;UACEmB,QAAQ,EAAE,IAAI,CAAChB,KAAK,CAACP,EAAE;UACvBwB,UAAU,EAAEH;QACd,CAAC,EACD;UACEP,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClCC,aAAa,EAAE,UAAU,IAAI,CAACV,KAAK;UACrC;QACF,CACF,CAAC;QACDY,OAAO,CAACQ,GAAG,CAAC,oBAAoB,EAAEb,QAAQ,CAACN,IAAI,CAAC;QAChDoB,KAAK,CAAC,6BAA6B,CAAC;QACpC,IAAI,CAACP,UAAU,CAAC,CAAC,EAAE;MACrB,EAAE,OAAOH,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACJ,QAAQ,EAAEN,IAAG,IAAKU,KAAK,CAAC;QACrEU,KAAK,CAAC,6DAA6D,CAAC;QACpE,IAAI,CAACP,UAAU,CAAC,CAAC,EAAE;MACrB;IACF,CAAC;IACDQ,iBAAiBA,CAAA,EAAG;MAClB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAE/B,IAAI,EAAE;MAAe,CAAC,CAAC;IAC7C;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}